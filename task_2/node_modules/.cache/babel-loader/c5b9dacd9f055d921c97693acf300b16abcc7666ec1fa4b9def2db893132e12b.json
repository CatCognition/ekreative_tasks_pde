{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dimitrix Cognition\\\\Desktop\\\\All-DZ\\\\GITHUB\\\\Practice\\\\REACT\\\\task_2\\\\src\\\\components\\\\MiniPlayer.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './MiniPlayer.css';\nimport audioFile from './song.mp3';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst MiniPlayer = () => {\n  _s();\n  const [isPlaying, setIsPlaying] = useState(true);\n  const [volume, setVolume] = useState(50);\n  const audio = new Audio('ссылка на ваш аудиофайл.mp3');\n  const togglePlayPause = () => {\n    if (isPlaying) {\n      audio.pause();\n    } else {\n      audio.play();\n    }\n    setIsPlaying(!isPlaying);\n  };\n  const handleVolumeChange = e => {\n    const newVolume = e.target.value;\n    setVolume(newVolume);\n    audio.volume = newVolume / 100;\n  };\n  const mute = () => {\n    audio.muted = !audio.muted;\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"mini-player\",\n    children: [/*#__PURE__*/_jsxDEV(\"button\", {\n      className: `play-pause ${isPlaying ? 'playing' : ''}`,\n      onClick: togglePlayPause,\n      children: isPlaying ? 'Pause' : 'Play'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"range\",\n      min: \"0\",\n      max: \"100\",\n      value: volume,\n      onChange: handleVolumeChange,\n      className: \"volume-slider\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"mute-button\",\n      onClick: mute,\n      children: audio.muted ? 'Unmute' : 'Mute'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n_s(MiniPlayer, \"La4WmAqqF5gvcuFc8jRC1lLwzcI=\");\n_c = MiniPlayer;\nexport default MiniPlayer;\nvar _c;\n$RefreshReg$(_c, \"MiniPlayer\");","map":{"version":3,"names":["React","useState","audioFile","jsxDEV","_jsxDEV","MiniPlayer","_s","isPlaying","setIsPlaying","volume","setVolume","audio","Audio","togglePlayPause","pause","play","handleVolumeChange","e","newVolume","target","value","mute","muted","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","type","min","max","onChange","_c","$RefreshReg$"],"sources":["C:/Users/Dimitrix Cognition/Desktop/All-DZ/GITHUB/Practice/REACT/task_2/src/components/MiniPlayer.jsx"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './MiniPlayer.css';\r\nimport audioFile from './song.mp3';\r\n\r\nconst MiniPlayer = () => {\r\n  const [isPlaying, setIsPlaying] = useState(true);\r\n  const [volume, setVolume] = useState(50);\r\n\r\n  const audio = new Audio('ссылка на ваш аудиофайл.mp3');\r\n\r\n  const togglePlayPause = () => {\r\n    if (isPlaying) {\r\n      audio.pause();\r\n    } else {\r\n      audio.play();\r\n    }\r\n    setIsPlaying(!isPlaying);\r\n  };\r\n\r\n  const handleVolumeChange = (e) => {\r\n    const newVolume = e.target.value;\r\n    setVolume(newVolume);\r\n    audio.volume = newVolume / 100;\r\n  };\r\n\r\n  const mute = () => {\r\n    audio.muted = !audio.muted;\r\n  };\r\n\r\n  return (\r\n    <div className=\"mini-player\">\r\n      <button className={`play-pause ${isPlaying ? 'playing' : ''}`} onClick={togglePlayPause}>\r\n        {isPlaying ? 'Pause' : 'Play'}\r\n      </button>\r\n      <input\r\n        type=\"range\"\r\n        min=\"0\"\r\n        max=\"100\"\r\n        value={volume}\r\n        onChange={handleVolumeChange}\r\n        className=\"volume-slider\"\r\n      />\r\n      <button className=\"mute-button\" onClick={mute}>\r\n        {audio.muted ? 'Unmute' : 'Mute'}\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default MiniPlayer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,kBAAkB;AACzB,OAAOC,SAAS,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnC,MAAMC,UAAU,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,SAAS,EAAEC,YAAY,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAChD,MAAM,CAACQ,MAAM,EAAEC,SAAS,CAAC,GAAGT,QAAQ,CAAC,EAAE,CAAC;EAExC,MAAMU,KAAK,GAAG,IAAIC,KAAK,CAAC,6BAA6B,CAAC;EAEtD,MAAMC,eAAe,GAAGA,CAAA,KAAM;IAC5B,IAAIN,SAAS,EAAE;MACbI,KAAK,CAACG,KAAK,CAAC,CAAC;IACf,CAAC,MAAM;MACLH,KAAK,CAACI,IAAI,CAAC,CAAC;IACd;IACAP,YAAY,CAAC,CAACD,SAAS,CAAC;EAC1B,CAAC;EAED,MAAMS,kBAAkB,GAAIC,CAAC,IAAK;IAChC,MAAMC,SAAS,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK;IAChCV,SAAS,CAACQ,SAAS,CAAC;IACpBP,KAAK,CAACF,MAAM,GAAGS,SAAS,GAAG,GAAG;EAChC,CAAC;EAED,MAAMG,IAAI,GAAGA,CAAA,KAAM;IACjBV,KAAK,CAACW,KAAK,GAAG,CAACX,KAAK,CAACW,KAAK;EAC5B,CAAC;EAED,oBACElB,OAAA;IAAKmB,SAAS,EAAC,aAAa;IAAAC,QAAA,gBAC1BpB,OAAA;MAAQmB,SAAS,EAAG,cAAahB,SAAS,GAAG,SAAS,GAAG,EAAG,EAAE;MAACkB,OAAO,EAAEZ,eAAgB;MAAAW,QAAA,EACrFjB,SAAS,GAAG,OAAO,GAAG;IAAM;MAAAmB,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACvB,CAAC,eACTzB,OAAA;MACE0B,IAAI,EAAC,OAAO;MACZC,GAAG,EAAC,GAAG;MACPC,GAAG,EAAC,KAAK;MACTZ,KAAK,EAAEX,MAAO;MACdwB,QAAQ,EAAEjB,kBAAmB;MAC7BO,SAAS,EAAC;IAAe;MAAAG,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC,eACFzB,OAAA;MAAQmB,SAAS,EAAC,aAAa;MAACE,OAAO,EAAEJ,IAAK;MAAAG,QAAA,EAC3Cb,KAAK,CAACW,KAAK,GAAG,QAAQ,GAAG;IAAM;MAAAI,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC1B,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACvB,EAAA,CA3CID,UAAU;AAAA6B,EAAA,GAAV7B,UAAU;AA6ChB,eAAeA,UAAU;AAAC,IAAA6B,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}