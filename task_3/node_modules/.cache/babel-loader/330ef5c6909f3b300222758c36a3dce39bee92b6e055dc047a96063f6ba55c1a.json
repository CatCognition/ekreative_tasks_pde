{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Dimitrix Cognition\\\\Desktop\\\\All-DZ\\\\GITHUB\\\\Practice\\\\REACT\\\\task_3\\\\src\\\\components\\\\ColorPalette.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport ColorItem from './ColorItem.js';\nimport './ColorPalette.css';\nimport paletteData from '../styles/ColorPalette.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst ColorPalette = () => {\n  _s();\n  const [selectedPalette, setSelectedPalette] = useState(paletteData[0]); // Выберите первую палитру по умолчанию\n\n  const handlePaletteChange = palette => {\n    setSelectedPalette(palette);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Select Palette:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 16,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n        onChange: e => handlePaletteChange(paletteData[e.target.value]),\n        children: paletteData.map((palette, index) => /*#__PURE__*/_jsxDEV(\"option\", {\n          value: index,\n          children: palette.paletteName\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 19,\n          columnNumber: 15\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"color-palette\",\n      children: selectedPalette.colors.map((color, index) => /*#__PURE__*/_jsxDEV(ColorItem, {\n        color: color\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 7\n  }, this);\n};\n_s(ColorPalette, \"PlH7zJ/hJOAOVVdbpK86zRkEp84=\");\n_c = ColorPalette;\nexport default ColorPalette;\nvar _c;\n$RefreshReg$(_c, \"ColorPalette\");","map":{"version":3,"names":["React","useState","ColorItem","paletteData","jsxDEV","_jsxDEV","ColorPalette","_s","selectedPalette","setSelectedPalette","handlePaletteChange","palette","children","fileName","_jsxFileName","lineNumber","columnNumber","onChange","e","target","value","map","index","paletteName","className","colors","color","_c","$RefreshReg$"],"sources":["C:/Users/Dimitrix Cognition/Desktop/All-DZ/GITHUB/Practice/REACT/task_3/src/components/ColorPalette.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport ColorItem from './ColorItem.js';\r\nimport './ColorPalette.css';\r\nimport paletteData from '../styles/ColorPalette.css';\r\n\r\nconst ColorPalette = () => {\r\n    const [selectedPalette, setSelectedPalette] = useState(paletteData[0]); // Выберите первую палитру по умолчанию\r\n  \r\n    const handlePaletteChange = (palette) => {\r\n      setSelectedPalette(palette);\r\n    };\r\n  \r\n    return (\r\n      <div>\r\n        <div>\r\n        <label>Select Palette:</label>\r\n          <select onChange={(e) => handlePaletteChange(paletteData[e.target.value])}>\r\n            {paletteData.map((palette, index) => (\r\n              <option key={index} value={index}>{palette.paletteName}</option>\r\n            ))}\r\n          </select>\r\n        </div>\r\n        <div className=\"color-palette\">\r\n          {selectedPalette.colors.map((color, index) => (\r\n            <ColorItem key={index} color={color} />\r\n          ))}\r\n        </div>\r\n      </div>\r\n    );\r\n  };\r\n\r\nexport default ColorPalette;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAOC,SAAS,MAAM,gBAAgB;AACtC,OAAO,oBAAoB;AAC3B,OAAOC,WAAW,MAAM,4BAA4B;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAErD,MAAMC,YAAY,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACvB,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGR,QAAQ,CAACE,WAAW,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;;EAExE,MAAMO,mBAAmB,GAAIC,OAAO,IAAK;IACvCF,kBAAkB,CAACE,OAAO,CAAC;EAC7B,CAAC;EAED,oBACEN,OAAA;IAAAO,QAAA,gBACEP,OAAA;MAAAO,QAAA,gBACAP,OAAA;QAAAO,QAAA,EAAO;MAAe;QAAAC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAO,CAAC,eAC5BX,OAAA;QAAQY,QAAQ,EAAGC,CAAC,IAAKR,mBAAmB,CAACP,WAAW,CAACe,CAAC,CAACC,MAAM,CAACC,KAAK,CAAC,CAAE;QAAAR,QAAA,EACvET,WAAW,CAACkB,GAAG,CAAC,CAACV,OAAO,EAAEW,KAAK,kBAC9BjB,OAAA;UAAoBe,KAAK,EAAEE,KAAM;UAAAV,QAAA,EAAED,OAAO,CAACY;QAAW,GAAzCD,KAAK;UAAAT,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAA6C,CAChE;MAAC;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACI,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC,eACNX,OAAA;MAAKmB,SAAS,EAAC,eAAe;MAAAZ,QAAA,EAC3BJ,eAAe,CAACiB,MAAM,CAACJ,GAAG,CAAC,CAACK,KAAK,EAAEJ,KAAK,kBACvCjB,OAAA,CAACH,SAAS;QAAawB,KAAK,EAAEA;MAAM,GAApBJ,KAAK;QAAAT,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAiB,CACvC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACH,CAAC;AAEV,CAAC;AAACT,EAAA,CAxBED,YAAY;AAAAqB,EAAA,GAAZrB,YAAY;AA0BlB,eAAeA,YAAY;AAAC,IAAAqB,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}